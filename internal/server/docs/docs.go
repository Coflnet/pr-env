// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/environment": {
            "post": {
                "description": "Creates a new environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Creates a new environment",
                "parameters": [
                    {
                        "description": "Environment to create",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.environmentModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server.environmentModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    }
                }
            }
        },
        "/environment-instance/list/{name}": {
            "get": {
                "description": "Lists all instances of an environment by the environment name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environmentinstance"
                ],
                "summary": "Lists all instances of an environment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the environment",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/environment/list": {
            "get": {
                "description": "List of all environments the user has access to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "List all available Environments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server.environmentModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    }
                }
            }
        },
        "/environment/{name}": {
            "delete": {
                "description": "Deletes an environment based on the name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Deletes an environment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the environment to delete",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.environmentModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.httpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.applicationSettingsModel": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "server.containerSettingsModel": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "registry": {
                    "type": "string"
                }
            }
        },
        "server.environmentModel": {
            "type": "object",
            "properties": {
                "applicationSettings": {
                    "$ref": "#/definitions/server.applicationSettingsModel"
                },
                "containerSettings": {
                    "$ref": "#/definitions/server.containerSettingsModel"
                },
                "gitSettings": {
                    "$ref": "#/definitions/server.gitSettingsModel"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "server.gitSettingsModel": {
            "type": "object",
            "properties": {
                "organization": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                }
            }
        },
        "server.httpError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Preview Environment Operator",
	Description:      "This is the Preview Environment Operator",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
