openapi: 3.0.1
info:
  title: Preview Environment Operator
  description: This is the Preview Environment Operator
  termsOfService: http://swagger.io/terms/
  contact: {}
  version: "1.0"
servers:
  - url: https://dash.tmpenv/api/v1
paths:
  /environment:
    post:
      tags:
      - environment
      summary: Creates a new environment
      description: Creates a new environment
      parameters:
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      requestBody:
        description: Environment to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/server.environmentModel'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server.environmentModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
      x-codegen-request-body-name: environment
  /environment/list:
    get:
      tags:
      - environment
      summary: List all available Environments
      description: List of all environments the user has access to
      parameters:
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server.environmentModel'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
  /environment/{id}:
    delete:
      tags:
      - environment
      summary: Deletes an environment
      description: Deletes an environment based on the id
      parameters:
      - name: id
        in: path
        description: Id of the environment to delete
        required: true
        schema:
          type: string
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.environmentModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
  /environment-instance/{id}/list:
    get:
      tags:
      - environmentinstance
      summary: Lists all instances of an environment
      description: Lists all instances of an environment by the environment id
      parameters:
      - name: id
        in: path
        description: Id of the environment to list instances
        required: true
        schema:
          type: string
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.environmentModel'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
  /github/repositories:
    get:
      tags:
      - github
      summary: Lists all the repositories of the authenticated user
      description: Lists all the repositories of the authenticated user
      parameters:
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server.githubRepositoryModel'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
components:
  schemas:
    server.githubRepositoryModel:
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
    server.applicationSettingsModel:
      type: object
      properties:
        hostname:
          type: string
        port:
          type: integer
    server.containerSettingsModel:
      type: object
      properties:
        image:
          type: string
        registry:
          type: string
    server.environmentModel:
      type: object
      properties:
        applicationSettings:
          $ref: '#/components/schemas/server.applicationSettingsModel'
        containerSettings:
          $ref: '#/components/schemas/server.containerSettingsModel'
        gitSettings:
          $ref: '#/components/schemas/server.gitSettingsModel'
        name:
          type: string
        id:
          type: string
    server.gitSettingsModel:
      type: object
      properties:
        organization:
          type: string
        repository:
          type: string
    server.httpError:
      type: object
      properties:
        message:
          type: object
x-original-swagger-version: "2.0"

