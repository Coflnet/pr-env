openapi: 3.0.1
info:
  title: Preview Environment Operator
  description: This is the Preview Environment Operator
  termsOfService: http://swagger.io/terms/
  contact: {}
  version: "1.0"
servers:
  - url: https://dash.tmpenv/api/v1
  - url: http://localhost:8080/api/v1
paths:
  /environment:
    post:
      tags:
      - environment
      summary: Creates a new environment
      description: Creates a new environment
      parameters:
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      requestBody:
        description: Environment to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/previewEnvironmentModel'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewEnvironmentModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
      x-codegen-request-body-name: environment
  /environment/list:
    get:
      tags:
      - environment
      summary: List all available Environments
      description: List of all environments the user has access to
      parameters:
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/previewEnvironmentModel'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
  /environment/{id}:
    delete:
      tags:
      - environment
      summary: Deletes an environment
      description: Deletes an environment based on the id
      parameters:
      - name: id
        in: path
        description: Id of the environment to delete
        required: true
        schema:
          type: string
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewEnvironmentModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
  /environment-instance/{id}/list:
    get:
      tags:
      - environmentinstance
      summary: Lists all instances of an environment
      description: Lists all instances of an environment by the environment id
      parameters:
      - name: id
        in: path
        description: Id of the environment to list instances
        required: true
        schema:
          type: string
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/previewEnvironmentInstanceModel'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
  /github/repositories:
    get:
      tags:
      - github
      summary: Lists all the repositories of the authenticated user
      description: Lists all the repositories of the authenticated user
      parameters:
      - name: authentication
        in: header
        description: Authentication token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/githubRepositoryModel'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server.httpError'
components:
  schemas:
    previewEnvironmentModel:
      type: object
      required:
        - applicationSettings
        - containerSettings
        - gitSettings
        - buildSettings
        - name
        - id
      properties:
        applicationSettings:
          $ref: '#/components/schemas/applicationSettingsModel'
        containerSettings:
          $ref: '#/components/schemas/containerSettingsModel'
        gitSettings:
          $ref: '#/components/schemas/gitSettingsModel'
        buildSettings:
          $ref: '#/components/schemas/buildSettings'
        name:
          type: string
        id:
          type: string
    applicationSettingsModel:
      type: object
      required:
      - port
      properties:
        port:
          type: integer
        environmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/environmentVariableModel'
        command:
          type: string
    environmentVariableModel:
      type: object
      required:
      - key
      - value
      properties:
        key:
          type: string
        value:
          type: string
    containerSettingsModel:
      type: object
      properties:
        registry:
          type: string
        repository:
          type: string
    gitSettingsModel:
      type: object
      required:
      - repository
      - organization
      properties:
        repository:
          type: string
        organization:
          type: string
    buildSettings:
      type: object
      required:
      - buildAllPullRequests
      - buildAllBranches
      properties:
        buildAllPullRequests:
          type: boolean
        buildAllBranches:
          type: boolean
        branchWildcard:
          type: string
        dockerFilePath:
          type: string
    previewEnvironmentInstanceModel:
      type: object
      required:
      - name
      - desiredPhase
      - ownerId
      - previewEnvironmentId
      - instanceGitSettings
      properties:
        name:
          type: string
        desiredPhase:
          type: string
        ownerId:
          type: string
        previewEnvironmentId:
          type: string
        instanceGitSettings:
          $ref: '#/components/schemas/instanceGitSettingsModel'
    instanceGitSettingsModel:
      type: object
      properties:
        branch:
          type: string
        commitHash:
          type: string
        pullRequestIdentifier:
          type: string
    githubRepositoryModel:
      type: object
      required:
      - name
      - owner
      properties:
        name:
          type: string
        owner:
          type: string
        
    server.httpError:
      type: object
      properties:
        message:
          type: object

